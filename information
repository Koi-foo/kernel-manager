#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Python
import os
import re
import sys
from subprocess import run, PIPE, Popen
from platform import release
# PyQt
from PyQt5 import QtWidgets, QtGui, QtCore
from PyQt5.QtWidgets import QSystemTrayIcon, QMenu, QAction
from PyQt5.QtGui import QIcon
# Forms
from form.tray_win import Ui_TrayWindow


class SystemTrayWindows(QtWidgets.QMainWindow, Ui_TrayWindow):
    """Окно настроек уведомлений на панели задач"""
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        # Значок
        self.tray_icon = QSystemTrayIcon(self)
        self.tray_icon.setIcon(QIcon(":/picture/icons/logo/tray.png"))
        self.tray_icon.setVisible(False)
        self.tray_icon.setToolTip("Kernel Manager")

        # Сигналы
        self.tray_icon.activated.connect(self.open_kernel_manager)

        # Действия для меню
        quit_actio = QAction(
            QIcon(":/picture/icons/application-exit.svg"),
            "Disable indicator", self)
        quit_actio.triggered.connect(exit)
        # Меню
        tray_menu = QMenu()
        tray_menu.addAction(quit_actio)

        self.tray_icon.setContextMenu(tray_menu)
        self.test_version_kernel()


    def test_version_kernel(self):
        """Проверка версии ядра"""
        flavour = re.search(r'.*-(.+-.+)-', release()).group(1)
        current_number = release().split('-')[0]
        new_version = current_number.split('.')

        search_version = run(
            f"apt-cache pkgnames kernel-image-{flavour}#",
            shell=True, stdout=PIPE, encoding='utf-8').stdout

        for line in search_version.splitlines():
            act = re.search(r'.*#.*:(.+)-' ,line).group(1).split(".")

            if int(act[0]) > int(new_version[0]): new_version[0] = act[0]
            if int(act[1]) > int(new_version[1]): new_version[1] = act[1]
            if int(act[2]) > int(new_version[2]): new_version[2] = act[2]

        new_version = ".".join(new_version)

        if current_number == new_version:
            exit()
        else:
            self.tray_icon.setVisible(True)
            self.tray_icon.showMessage(
                "Kernel update", "A new version of the kernel is available: " + new_version,
                QSystemTrayIcon.Information, 10000)


    def open_kernel_manager(self):
        """Открыть kernel manager"""
        activ_manager = run(
            "pidof -x kernel-manager",
            shell=True, stdout=PIPE, encoding='utf-8').stdout

        if activ_manager:
            pass
        else:
            Popen("kernel-manager")


    def open_window_tray(self):
        """Окно настройки функций лотка"""
        run("ls")


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    sys_tray = SystemTrayWindows()
    sys.exit(app.exec_())
